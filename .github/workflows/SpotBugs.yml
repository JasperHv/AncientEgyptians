name: SpotBugs Security Analysis

# Controls when the workflow will run
on:
  # Triggers the workflow on push for all branches and pull request events for main branch
  push:
    - '**'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  spotbugs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Download SpotBugs and FindSecBugs
        run: |
          mkdir -p spotbugs-tools
          # Download SpotBugs
          wget https://github.com/spotbugs/spotbugs/releases/download/4.8.3/spotbugs-4.8.3.tgz -O spotbugs.tgz
          tar -xzf spotbugs.tgz -C spotbugs-tools --strip-components=1
          
          # Download FindSecBugs plugin
          wget https://github.com/find-sec-bugs/find-sec-bugs/releases/download/version-1.12.0/findsecbugs-plugin-1.12.0.jar -O spotbugs-tools/lib/findsecbugs-plugin.jar

      - name: Build project
        run: ./gradlew clean compileJava compileTestJava

      - name: Run SpotBugs with FindSecBugs
        run: |
          # Create output directory
          mkdir -p build/reports/spotbugs
          
          # Run SpotBugs on main classes
          java -jar spotbugs-tools/lib/spotbugs.jar \
            -textui \
            -html \
            -output build/reports/spotbugs/spotbugs-main.html \
            -auxclasspath $(./gradlew -q printClasspath) \
            -pluginList spotbugs-tools/lib/findsecbugs-plugin.jar \
            -effort:max \
            -low \
            build/classes/java/main
          
          # Run SpotBugs on test classes (if they exist)
          if [ -d "build/classes/java/test" ]; then
            java -jar spotbugs-tools/lib/spotbugs.jar \
              -textui \
              -html \
              -output build/reports/spotbugs/spotbugs-test.html \
              -auxclasspath $(./gradlew -q printClasspath) \
              -pluginList spotbugs-tools/lib/findsecbugs-plugin.jar \
              -effort:max \
              -low \
              build/classes/java/test
          fi

      - name: Upload SpotBugs Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: spotbugs-reports
          path: build/reports/spotbugs/
          retention-days: 30

      - name: Comment PR with SpotBugs Results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Check if SpotBugs found any issues
            const reportPath = 'build/reports/spotbugs/spotbugs-main.html';
            if (fs.existsSync(reportPath)) {
              const reportContent = fs.readFileSync(reportPath, 'utf8');
            
              // Simple check for bugs (you can make this more sophisticated)
              const bugCount = (reportContent.match(/Bug instance/g) || []).length;
            
              const comment = bugCount > 0 
                ? `⚠️ SpotBugs found ${bugCount} potential issue(s) in your code. Please check the [SpotBugs report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.`
                : `✅ SpotBugs analysis completed with no issues found!`;
            
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }